name: CI Build

on:
  push:
    branches: [ main ]

  pull_request:
     branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    name: Ruby ${{ matrix.ruby }} on ${{ matrix.operating-system }}

    env:
      NAME: Ruby ${{ matrix.ruby }} on ${{ matrix.operating-system }}

    strategy:
      fail-fast: false
      matrix:
        ruby: ['3.0', '3.2', head, jruby-head]
        operating-system: [ubuntu-latest]
        include:
          - ruby: '3.0'
            operating-system: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build successfully
        run: echo "SUCCESS"
        #run only if config is 1 or 3
        # if: ${{ matrix.ruby != 'head' }}

      # - name: Build failed
      #   run: echo "FAILED" && exit 1
      #   #run only if config is
      #   if: ${{ matrix.ruby == 'head' }}

      - name: Save status
        run: |
          mkdir -p status
          echo "${NAME}: ${{ job.status }}" > "status/$(date +'%Y%m%d%H%M%S') ${NAME}.txt"
        if: always()

      - name: Upload status artifact
        uses: actions/upload-artifact@v3
        with:
          name: status
          path: "status/*.txt"
        if: always()

  build-job2:
    needs: build
    runs-on: ubuntu-latest
    env:
      NAME: Build Job 2

    steps:
      - run: echo "SUCCESS"

      - name: Save status
        run: |
          mkdir -p status
          echo "${NAME}: ${{ job.status }}" > "status/$(date +'%Y%m%d%H%M%S') ${NAME}.txt"
        if: always()

      - name: Upload status artifact
        uses: actions/upload-artifact@v3
        with:
          name: status
          path: "status/*.txt"
        if: always()

  report:
    needs: build-job2
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: all contexts
        run: |
          echo "{"
          echo "github: ${{ toJson(github) }},"
          echo "env: ${{ toJson(env) }},"
          echo "vars: ${{ toJson(vars) }},"
          echo "job: ${{ toJson(job) }},"
          # echo "jobs: ${{ toJson(jobs) }},"
          echo "steps: ${{ toJson(steps) }},"
          echo "runner: ${{ toJson(runner) }},"
          echo "secrets: ${{ toJson(secrets) }},"
          echo "strategy: ${{ toJson(strategy) }},"
          echo "matrix: ${{ toJson(matrix) }},"
          echo "needs: ${{ toJson(needs) }},"
          echo "inputs: ${{ toJson(inputs) }}"
          echo "}"

      - name: github context
        run: echo "${{ toJson(github) }}"

      - name: env context
        run: echo "${{ toJson(env) }}"

      - name: vars context
        run: echo "${{ toJson(vars) }}"

      - name: job context
        run: echo "${{ toJson(job) }}"

      # - name: jobs context
      #   run: echo "${{ toJson(jobs) }}"

      - name: steps context
        run: echo "${{ toJson(steps) }}"

      - name: runner context
        run: echo "${{ toJson(runner) }}"

      - name: secrets context
        run: echo "${{ toJson(secrets) }}"

      # - name: strategy context
      #   run: echo "${{ toJson(strategy) }}"

      # - name: matrix context
      #   run: echo "${{ toJson(matrix) }}"

      - name: needs context
        run: echo "${{ toJson(needs) }}"

      - name: inputs context
        run: echo "${{ toJson(inputs) }}"

      - name: Check statuses
        run: |
          ls status/*.txt | sort | while IFS= read -r file; do
            cat "$file"
          done
    if: always()
